<import name="title-bar" src="./../../components/TitleBar"></import>
<template>
  <div class="page-wrapper main-page">
    <title-bar title="搜索"></title-bar>
    <div class="search-form">
      <input
        type="text"
        value='{{value}}'
        class='keyword'
        placeholder="如李白、将进酒"
        enterkeytype='search'
        @enterkeyclick='search'
        @change='updateKeyword'
      />
      <input type="button" value='搜索' class='button' @click='search'>
    </div>
    <list class="result-poetries">
      <list-item class='poetry' for='poetries' type='poetry' @click='viewPoetry($item)'>
        <text class='fav'>{{ $item.title }}</text>
      </list-item>
    </list>
  </div>
</template>

<script>
  import router from '@system.router'
  import app from '@system.app'
  import storage from '@system.storage'
  import poetries from '../../data/poetries'
  import ajax from '../../helper/ajax.js'

  const FAVORITES = 'favoritesList'
  const appInfo = app.getInfo()

  export default {
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    private: {
      keyword: '',
      poetries: [],
      currentIndex: 0,
      favoritesList: {},
      favoritesPath: './../../assets/icons/favorites_empty.svg'
    },

    protected: {
      title: appInfo.name,
      icon: appInfo.icon
    },

    onShow () {
      APP_STATISTICS.page_show(this)
      const params = { active: true }
    },

    onHide() {
      APP_STATISTICS.page_hide(this)
    },

    onMenuPress () {
      this.$app.$def.showMenu()
    },

    viewPoetry (poetry) {
      router.push({
        uri: '/pages/Detail',
        params: {
          id: poetry._id
        }
      })
    },

    updateKeyword ($ev) {
      this.keyword = $ev.value
    },

    search () {
      global.$apis.poetry.search({
        page: 1,
        keyword: this.keyword
      }).then(poetries => {
        this.poetries = poetries.map(({ _id, title, author, paragraphs }) => {
          return {
            _id,
            title,
            author,
            paragraphs
          }
        })
      })
    }
  }
</script>

<style lang="less">
  @import './../../assets/styles/style.less';
  .main-page {
    .flex-box-mixins(column, center, center);
    width: 100%;
    background-image: url('./../../assets/images/bg.jpeg');
    background-size: cover;
    background-position: bottom;
  }
  .poetry {
    padding: 20px 50px;
    border-top-width: 1px;
    border-top-style: solid;
    border-top-color: #ccc;
    background-color: rgba(255, 255, 255, 0.5);
    .fav {
      font-size: 6 * @size-factor;
    }
  }
  .search-form {
    display: flex;
    flex-direction: row;
    width: 100%;
    padding: @size-factor 2 * @size-factor;
    .keyword {
      flex-grow: 1;
    }
    .button {
      margin: 0;
      margin-left: 10px;
    }
  }
</style>
